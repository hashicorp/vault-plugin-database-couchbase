# Golang CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-go/ for more details
version: 2
jobs:
  build:
    machine:
      docker_layer_caching: true
    environment:
      GO_VERSION: 1.14.4
      GO_TEST_CMD: gotestsum --format=short-verbose --junitfile=test-results/go-test/$${COUCHBASE_VERSION}-results.xml --jsonfile=test-results/go-test/$${COUCHBASE_VERSION}-results.json --
      GOTESTSUM_VERSION: 0.5.2
    #### TEMPLATE_NOTE: go expects specific checkout path representing url
    #### expecting it in the form of
    ####   /go/src/github.com/circleci/go-tool
    ####   /go/src/bitbucket.org/circleci/go-tool
    working_directory: /go/src/github.com/{{ORG_NAME}}/{{REPO_NAME}}
    steps:
    - run:
        command: |
          [ -n "$GO_VERSION" ] || { echo "You must set GO_VERSION"; exit 1; }
          # Install Go
          curl -sSLO "https://dl.google.com/go/go${GO_VERSION}.linux-amd64.tar.gz"
          sudo rm -rf /usr/local/go
          sudo tar -C /usr/local -xzf "go${GO_VERSION}.linux-amd64.tar.gz"
          rm -f "go${GO_VERSION}.linux-amd64.tar.gz"
          GOPATH="/go"
          mkdir $GOPATH 2>/dev/null || { sudo mkdir $GOPATH && sudo chmod 777 $GOPATH; }
          echo "export GOPATH='$GOPATH'" >> "$BASH_ENV"
          echo "export PATH='$PATH:$GOPATH/bin:/usr/local/go/bin'" >> "$BASH_ENV"

          echo "$ go version"
          go version

          # Install gotestsum
          curl -sSL "https://github.com/gotestyourself/gotestsum/releases/download/v${GOTESTSUM_VERSION}/gotestsum_${GOTESTSUM_VERSION}_linux_amd64.tar.gz" \
            | sudo tar --overwrite -xz -C /usr/local/bin gotestsum

        name: Setup Go
        working_directory: ~/
    - checkout
    - run:
        command: |
          mkdir -p test-results/go-test
          COUCHBASE_VERSION=6.6.0 make testacc
          COUCHBASE_VERSION=6.5.1 make testacc
          COUCHBASE_VERSION=6.5.0 make testacc
          COUCHBASE_VERSION=6.0.0 make testacc
          COUCHBASE_VERSION=5.5.1 make testacc
        name: Run Go tests
    - store_artifacts:
        path: test-results
    - store_test_results:
        path: test-results
